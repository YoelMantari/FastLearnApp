ğŸ§  Pregunta 1
Â¿CuÃ¡l es la diferencia esencial entre un proceso y un hilo?

A. Los hilos tienen su propia memoria, mientras que los procesos no.
B. Los procesos son unidades ligeras de ejecuciÃ³n dentro de un hilo.
C. Los procesos tienen memoria propia; los hilos comparten la del proceso.
D. No existe diferencia entre procesos e hilos.

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: Un proceso tiene su propia memoria y recursos, mientras que los hilos comparten los recursos del proceso que los contiene.

ğŸ§  Pregunta 2
Â¿QuÃ© define a un programa como concurrente?

A. Puede manejar mÃºltiples tareas en distintos lenguajes.
B. Puede ejecutar tareas en varios hilos o responder a eventos simultÃ¡neamente.
C. Puede ejecutarse en cualquier sistema operativo.
D. Solo utiliza un hilo principal.

âœ… Correcta: B
ğŸ§¾ ExplicaciÃ³n: Un programa concurrente puede gestionar mÃºltiples tareas o eventos al mismo tiempo, sin bloquearse.

ğŸ§  Pregunta 3
Â¿QuÃ© componente del sistema decide cuÃ¡ndo un hilo pasa de "Runnable" a "Running"?

A. El desarrollador.
B. El compilador de Java.
C. El planificador del sistema operativo.
D. El recolector de basura.

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: El sistema operativo decide cuÃ¡l hilo se ejecuta entre los que estÃ¡n listos (Runnable).

ğŸ§  Pregunta 4
Â¿CuÃ¡l es el efecto de llamar start() sobre un objeto Thread en Java?

A. Crea un nuevo hilo y ejecuta su mÃ©todo run().
B. Ejecuta run() en el hilo actual.
C. Termina el hilo inmediatamente.
D. Lo convierte en hilo daemon automÃ¡ticamente.

âœ… Correcta: A
ğŸ§¾ ExplicaciÃ³n: start() crea un nuevo hilo independiente y luego ejecuta automÃ¡ticamente el mÃ©todo run().

ğŸ§  Pregunta 5
Â¿QuÃ© estado representa que un hilo estÃ¡ esperando acceso a un recurso?

A. Running
B. Suspended
C. Blocked
D. Runnable

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: Blocked indica que el hilo estÃ¡ detenido porque espera acceder a un recurso que estÃ¡ ocupado.

ğŸ§  Pregunta 6
Â¿QuÃ© sucede si se llama run() en lugar de start() en un hilo?

A. Se crea un nuevo hilo en segundo plano.
B. No pasa nada, el hilo no se ejecuta.
C. El cÃ³digo de run() se ejecuta en el hilo actual, sin concurrencia.
D. El hilo entra automÃ¡ticamente en estado daemon.

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: Llamar run() directamente ejecuta el cÃ³digo en el mismo hilo actual, no se lanza ningÃºn hilo nuevo.

ğŸ§  Pregunta 7
Â¿CuÃ¡l es el propÃ³sito principal del mÃ©todo join() en Java?

A. Sincronizar todos los hilos de un proceso.
B. Esperar a que otro hilo termine antes de continuar.
C. Asignar una prioridad mayor a un hilo.
D. Detener un hilo indefinidamente.

âœ… Correcta: B
ğŸ§¾ ExplicaciÃ³n: join() hace que el hilo actual espere hasta que otro hilo finalice.

ğŸ§  Pregunta 8
Â¿QuÃ© ocurre si un hilo daemon sigue corriendo cuando todos los hilos de usuario terminan?

A. El hilo daemon se bloquea.
B. El hilo daemon continÃºa funcionando.
C. El hilo daemon se termina automÃ¡ticamente.
D. El hilo daemon se convierte en hilo principal.

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: Los daemon threads se eliminan automÃ¡ticamente cuando no quedan hilos de usuario activos.

ğŸ§  Pregunta 9
Â¿CuÃ¡l es el objetivo de la bandera de interrupciÃ³n en un hilo?

A. Indicar que el hilo ha terminado su tarea.
B. Confirmar si un hilo fue pausado por sleep().
C. Detectar si un hilo ha sido interrumpido y reaccionar apropiadamente.
D. Incrementar la prioridad de un hilo.

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: La bandera de interrupciÃ³n permite que el hilo sepa si ha sido interrumpido y tome decisiones en consecuencia (como terminar su ejecuciÃ³n).

ğŸ§  Pregunta 10
Â¿Por quÃ© se considera a Runnable una prÃ¡ctica recomendada frente a extender Thread?

A. Porque requiere menos cÃ³digo.
B. Porque permite heredar de otra clase y es mÃ¡s flexible.
C. Porque es mÃ¡s rÃ¡pido.
D. Porque no requiere mÃ©todo run().

âœ… Correcta: B
ğŸ§¾ ExplicaciÃ³n: Al implementar Runnable, se puede extender otra clase al mismo tiempo, lo cual es imposible si se extiende Thread (Java no admite herencia mÃºltiple).