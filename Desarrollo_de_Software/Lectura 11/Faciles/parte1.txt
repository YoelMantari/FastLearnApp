🧠 Pregunta 1

¿Cuál es una característica clave de Git como sistema de control de versiones distribuido?

A. Depende de un único servidor central
B. Solo permite trabajar conectado a internet
C. Cada clon del repositorio tiene todo el historial completo
D. Los cambios solo se guardan en el servidor principal

✅ Respuesta correcta: C. Cada clon del repositorio tiene todo el historial completo

🧠 Pregunta 2

¿Qué ventaja principal ofrece el modelo peer-to-peer de Git?

A. Requiere menos conocimiento técnico
B. Evita la necesidad de sincronizar cambios
C. Permite que todos los nodos trabajen de forma autónoma
D. Solo un desarrollador puede modificar el historial a la vez

✅ Respuesta correcta: C. Permite que todos los nodos trabajen de forma autónoma

🧠 Pregunta 3

¿Qué estructura utiliza Git para representar el historial de commits?

A. Árbol binario
B. Grafo acíclico dirigido (DAG)
C. Lista enlazada doble
D. Tabla hash lineal

✅ Respuesta correcta: B. Grafo acíclico dirigido (DAG)

🧠 Pregunta 4

¿Cuál es la función principal de un árbol de Merkle en Git?

A. Ejecutar los comandos en paralelo
B. Organizar ramas por orden alfabético
C. Garantizar la integridad del contenido del repositorio
D. Conectar múltiples repositorios remotos

✅ Respuesta correcta: C. Garantizar la integridad del contenido del repositorio

🧠 Pregunta 5

¿Qué propiedad tiene el algoritmo de hash SHA-1 usado en Git?

A. Genera claves simétricas para cifrar archivos
B. Permite recuperar el archivo original a partir del hash
C. Genera un identificador único basado en el contenido
D. Aumenta automáticamente el tamaño del repositorio

✅ Respuesta correcta: C. Genera un identificador único basado en el contenido

🧠 Pregunta 6

¿Cuál es uno de los beneficios del uso de packfiles en Git?

A. Obligan a los desarrolladores a trabajar online
B. Almacenan versiones completas de cada archivo
C. Aumentan la cantidad de archivos individuales
D. Mejoran la eficiencia de almacenamiento y transferencia

✅ Respuesta correcta: D. Mejoran la eficiencia de almacenamiento y transferencia

🧠 Pregunta 7

¿Qué comando se usa en Git para aplicar solo algunos commits de otra rama sin fusionarla entera?

A. git fetch
B. git rebase
C. git cherry-pick
D. git reset

✅ Respuesta correcta: C. git cherry-pick

🧠 Pregunta 8

¿Qué estrategia de fusión en Git se usa para integrar tres o más ramas simultáneamente?

A. Recursive
B. Octopus
C. Rebase
D. Cherry

✅ Respuesta correcta: B. Octopus

🧠 Pregunta 9

¿Por qué Git es resiliente ante fallos del servidor?

A. Porque los commits se almacenan en la nube
B. Porque guarda el historial en una base de datos externa
C. Porque cada clon es un repositorio autónomo completo
D. Porque usa backup manual después de cada commit

✅ Respuesta correcta: C. Porque cada clon es un repositorio autónomo completo

🧠 Pregunta 10

¿Qué comando de Git descarga cambios de otro repositorio sin integrarlos?

A. git pull
B. git fetch
C. git merge
D. git commit

✅ Respuesta correcta: B. git fetch

🧠 Pregunta 11

¿Cuál es una ventaja directa del modelo distribuido de Git?

A. Requiere más almacenamiento por usuario
B. Solo permite trabajar con servidores locales
C. Permite trabajar sin conexión a internet
D. Impide la colaboración paralela

✅ Respuesta correcta: C. Permite trabajar sin conexión a internet

🧠 Pregunta 12

¿Cuál de los siguientes objetos Git representa un archivo individual?

A. Commit
B. Tree
C. Tag
D. Blob

✅ Respuesta correcta: D. Blob

🧠 Pregunta 13

¿Qué efecto tiene modificar una línea de código en un archivo bajo Git?

A. Solo cambia el hash del archivo afectado
B. Cambia el hash del blob, tree y commit relacionados
C. No cambia nada si el cambio es pequeño
D. Cambia el hash de todos los archivos del repositorio

✅ Respuesta correcta: B. Cambia el hash del blob, tree y commit relacionados

🧠 Pregunta 14

¿Cuál es la principal razón de la transición de Git de SHA-1 a SHA-256?

A. SHA-1 es más difícil de calcular
B. SHA-256 es más rápido
C. SHA-1 tiene vulnerabilidades de colisión
D. SHA-256 ocupa menos espacio

✅ Respuesta correcta: C. SHA-1 tiene vulnerabilidades de colisión

🧠 Pregunta 15

¿Qué comando de Git permite fusionar y reordenar commits antes de integrarlos?

A. git merge
B. git reset
C. git rebase -i
D. git pull

✅ Respuesta correcta: C. git rebase -i

🧠 Pregunta 16

¿Para qué se utiliza el archivo .idx asociado a un packfile en Git?

A. Para encriptar el contenido del repositorio
B. Para almacenar los archivos temporales
C. Para indexar los objetos del packfile y acceder a ellos rápidamente
D. Para registrar el historial de cambios de ramas

✅ Respuesta correcta: C. Para indexar los objetos del packfile y acceder a ellos rápidamente

🧠 Pregunta 17

¿Qué comando de Git crea un nuevo commit que revierte los cambios de otro commit?

A. git reset
B. git revert
C. git undo
D. git rollback

✅ Respuesta correcta: B. git revert

🧠 Pregunta 18

¿Qué permite Git mergetool?

A. Ejecutar pruebas automáticas
B. Ver y resolver conflictos de fusión gráficamente
C. Comprimir objetos del repositorio
D. Eliminar ramas remotas

✅ Respuesta correcta: B. Ver y resolver conflictos de fusión gráficamente

🧠 Pregunta 19

¿Cuál de los siguientes beneficios proviene del uso de árboles de Merkle en Git?

A. Permiten eliminar ramas más rápido
B. Reducen el uso de SHA-1
C. Facilitan la detección de corrupción de datos
D. Mejoran la velocidad de conexión a internet

✅ Respuesta correcta: C. Facilitan la detección de corrupción de datos

🧠 Pregunta 20

¿Qué ocurre cuando se ejecuta el comando git gc?

A. Se eliminan todas las ramas locales
B. Se fusionan todos los commits
C. Se crean packfiles para optimizar el repositorio
D. Se borra el historial de cambios antiguos

✅ Respuesta correcta: C. Se crean packfiles para optimizar el repositorio

🧠 Pregunta 21

¿Qué estructura permite a Git realizar fusiones automáticas efectivas?

A. Lista enlazada
B. Tabla hash
C. Grafo acíclico dirigido (DAG)
D. Matriz de objetos

✅ Respuesta correcta: C. Grafo acíclico dirigido (DAG)

🧠 Pregunta 22

¿Cuál de estas propiedades NO corresponde a un algoritmo de hash criptográfico como SHA-1 o SHA-256?

A. Determinística
B. Irreversible
C. Sensible a pequeños cambios (avalancha)
D. Capacidad para recuperar el contenido original

✅ Respuesta correcta: D. Capacidad para recuperar el contenido original

🧠 Pregunta 23

¿Para qué se utiliza el delta encoding en Git?

A. Para cifrar cambios en los archivos
B. Para almacenar solo las diferencias entre versiones
C. Para acelerar la descarga inicial del repositorio
D. Para verificar la integridad del repositorio

✅ Respuesta correcta: B. Para almacenar solo las diferencias entre versiones

🧠 Pregunta 24

¿Cuál es una ventaja clave del uso de packfiles en Git?

A. Incrementar la velocidad del procesador
B. Reducir la cantidad de objetos sueltos
C. Incrementar la seguridad criptográfica del repositorio
D. Mantener una única rama activa en el repositorio

✅ Respuesta correcta: B. Reducir la cantidad de objetos sueltos

🧠 Pregunta 25

¿Cuándo Git utiliza la estrategia de fusión octopus?

A. Al fusionar exactamente dos ramas
B. Al fusionar tres o más ramas simultáneamente
C. Al hacer rebase interactivo
D. Al aplicar commits específicos con cherry-pick

✅ Respuesta correcta: B. Al fusionar tres o más ramas simultáneamente

🧠 Pregunta 26

¿Qué herramienta de Git permite reescribir y limpiar el historial de commits antes de fusionarlos?

A. git commit
B. git log
C. git rebase interactivo (git rebase -i)
D. git stash

✅ Respuesta correcta: C. git rebase interactivo (git rebase -i)

🧠 Pregunta 27

¿Por qué Git se considera resiliente a la corrupción de datos?

A. Por su almacenamiento en múltiples servidores
B. Porque usa ramas temporales para copias de seguridad
C. Por la estructura de árbol de Merkle y hashes criptográficos
D. Por la capacidad de rollback automático

✅ Respuesta correcta: C. Por la estructura de árbol de Merkle y hashes criptográficos

🧠 Pregunta 28

¿Cuál es una limitación conocida del algoritmo SHA-1 utilizado históricamente en Git?

A. Alto uso de memoria RAM
B. Vulnerabilidad a colisiones
C. Lentitud extrema al calcular
D. Necesidad constante de internet

✅ Respuesta correcta: B. Vulnerabilidad a colisiones

🧠 Pregunta 29

¿En qué situación sería preferible usar el comando git cherry-pick?

A. Cuando quieres fusionar múltiples ramas a la vez
B. Para limpiar el historial antes de una fusión
C. Para aplicar un commit específico sin fusionar toda la rama
D. Para restaurar completamente una rama eliminada

✅ Respuesta correcta: C. Para aplicar un commit específico sin fusionar toda la rama

🧠 Pregunta 30

¿Cuál de estas afirmaciones es verdadera respecto a trabajar offline con Git?

A. Es imposible hacer commits offline
B. Se necesita internet constante para verificar historial
C. Todas las operaciones críticas pueden hacerse offline
D. El historial se pierde si no sincronizas regularmente

✅ Respuesta correcta: C. Todas las operaciones críticas pueden hacerse offline