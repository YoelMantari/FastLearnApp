ğŸ§  Pregunta 21
Â¿CuÃ¡l es una desventaja de la configuraciÃ³n manual de infraestructura?

A. Permite automatizar todo desde el inicio
B. Garantiza entornos idÃ©nticos
C. Puede generar errores humanos y entornos inconsistentes
D. Es compatible con Git por defecto

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: La configuraciÃ³n manual depende de acciones humanas, lo que provoca variaciones, errores y diferencias entre entornos (ej. pruebas vs producciÃ³n).

ğŸ§  Pregunta 22
Â¿QuÃ© ventaja clave ofrece el uso de archivos de texto en Infrastructure as Code (IaC)?

A. Permiten controlar directamente la consola de AWS
B. Aumentan el tiempo de configuraciÃ³n
C. Facilitan el versionamiento y trazabilidad
D. Requieren SSH para ejecutar comandos

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: Al definir la infraestructura en cÃ³digo (ej. HCL o YAML), los cambios se pueden guardar en Git, revisar y reproducir fÃ¡cilmente.

ğŸ§  Pregunta 23
Â¿CuÃ¡l de los siguientes lenguajes se usa tÃ­picamente con Terraform?

A. YAML
B. HCL
C. Bash
D. Python

âœ… Correcta: B
ğŸ§¾ ExplicaciÃ³n: Terraform utiliza HCL (HashiCorp Configuration Language), un lenguaje declarativo diseÃ±ado para describir infraestructura.

ğŸ§  Pregunta 24
Â¿CuÃ¡l es un beneficio de ejecutar terraform plan antes de aplicar cambios?

A. Reinicia todos los servidores automÃ¡ticamente
B. Despliega el entorno en producciÃ³n
C. Muestra quÃ© cambios se realizarÃ¡n sin aplicarlos aÃºn
D. Permite cambiar a YAML directamente

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: terraform plan muestra una vista previa de las modificaciones, permitiendo revisar antes de ejecutarlas, lo que mejora la seguridad y control.

ğŸ§  Pregunta 25
Â¿QuÃ© caracterÃ­stica diferencia al enfoque declarativo en IaC?

A. Describe cÃ³mo instalar paso a paso
B. Define comandos que se ejecutan secuencialmente
C. Describe quÃ© recursos deben existir, no cÃ³mo crearlos
D. Obliga a usar scripts bash

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: El enfoque declarativo se enfoca en el estado deseado de la infraestructura, no en los pasos necesarios para alcanzarlo.

ğŸ§  Pregunta 26
Â¿CuÃ¡l de las siguientes acciones no se considera IaC en sentido estricto?

A. Usar Terraform para definir recursos
B. Crear recursos manualmente desde la consola web
C. Ejecutar terraform apply desde un pipeline
D. Versionar archivos YAML con Ansible

âœ… Correcta: B
ğŸ§¾ ExplicaciÃ³n: Crear recursos a mano desde la consola no deja registro en cÃ³digo, lo que impide trazabilidad y reproducibilidad.

ğŸ§  Pregunta 27
Â¿Por quÃ© un script bash como setup.sh no califica como IaC?

A. No se puede usar en Linux
B. No instala correctamente las dependencias
C. Es imperativo y no describe el estado deseado
D. Requiere una base de datos

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: Los scripts imperativos indican cÃ³mo hacer cosas paso a paso, pero no son declarativos ni idempotentes, requisitos clave de IaC.

ğŸ§  Pregunta 28
Â¿QuÃ© problema puede surgir si se usa solo un AMI clonado sin IaC?

A. El entorno es completamente reproducible
B. Se obtiene un historial detallado de cambios
C. No hay documentaciÃ³n de los pasos de configuraciÃ³n
D. Es compatible con Git

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: Clonar una imagen no conserva el detalle de configuraciÃ³n paso a paso; cualquier cambio posterior requiere rehacer todo el proceso.

ğŸ§  Pregunta 29
Â¿QuÃ© ventaja tiene IaC respecto a la automatizaciÃ³n tradicional con scripts?

A. Reduce la necesidad de redes virtuales
B. Garantiza el enfoque declarativo y reproducible
C. Instala software automÃ¡ticamente sin definiciÃ³n previa
D. No requiere conocimiento de Git

âœ… Correcta: B
ğŸ§¾ ExplicaciÃ³n: IaC permite definir quÃ© infraestructura se necesita, lo que asegura que los entornos se puedan reproducir de forma idÃ©ntica.

ğŸ§  Pregunta 30
Â¿CuÃ¡l es una caracterÃ­stica comÃºn de las herramientas de IaC como Terraform o Ansible?

A. Solo funcionan en Windows
B. Ejecutan comandos bash por SSH
C. Utilizan archivos de texto para definir infraestructura
D. Necesitan conectarse al entorno grÃ¡fico de AWS

âœ… Correcta: C
ğŸ§¾ ExplicaciÃ³n: Estas herramientas usan lenguajes como HCL o YAML para describir infraestructura como cÃ³digo y automatizar su provisiÃ³n.