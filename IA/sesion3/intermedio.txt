üß† Pregunta 1
¬øCu√°l es la principal diferencia entre la b√∫squeda ciega y la b√∫squeda informada en el contexto de la Inteligencia Artificial?

A. La b√∫squeda ciega utiliza una funci√≥n heur√≠stica para guiar la b√∫squeda hacia el objetivo.
B. La b√∫squeda informada utiliza conocimiento espec√≠fico del problema para mejorar la eficiencia de la b√∫squeda.
C. La b√∫squeda ciega siempre encuentra la soluci√≥n √≥ptima m√°s r√°pido que la b√∫squeda informada.
D. La b√∫squeda informada no requiere la definici√≥n de un estado objetivo.

‚úÖ Correcta: B
üßæ Explicaci√≥n: La b√∫squeda informada, tambi√©n conocida como b√∫squeda heur√≠stica, aplica conocimiento sobre el problema para estimar la "bondad" de los estados y priorizar la exploraci√≥n de los m√°s prometedores, a diferencia de la b√∫squeda ciega que no tiene informaci√≥n sobre la distancia al objetivo.

üß† Pregunta 2
En la b√∫squeda informada, ¬øqu√© papel fundamental desempe√±a la funci√≥n heur√≠stica?

A. Determinar el costo real del camino recorrido hasta un estado.
B. Estimar la distancia o el costo restante desde un estado actual hasta el estado objetivo.
C. Garantizar que el algoritmo de b√∫squeda encuentre siempre la soluci√≥n √≥ptima.
D. Definir el conjunto de operadores v√°lidos para cada estado del problema.

‚úÖ Correcta: B
üßæ Explicaci√≥n: La funci√≥n heur√≠stica es una estimaci√≥n num√©rica de qu√© tan cerca se encuentra un estado del objetivo. Esta estimaci√≥n se utiliza para ordenar la cola de nodos a explorar, dando preferencia a aquellos que parecen m√°s cercanos a la soluci√≥n.

üß† Pregunta 3
¬øQu√© caracter√≠stica principal diferencia al algoritmo de B√∫squeda de Costo Uniforme (UCS) de otros algoritmos de b√∫squeda?

A. Utiliza una funci√≥n heur√≠stica para guiar la b√∫squeda.
B. Expande el nodo con el menor costo de camino desde el estado inicial.
C. Explora el √°rbol de b√∫squeda en profundidad hasta encontrar una soluci√≥n.
D. Garantiza encontrar una soluci√≥n en problemas con espacios de estados infinitos.

‚úÖ Correcta: B
üßæ Explicaci√≥n: UCS prioriza la expansi√≥n de nodos bas√°ndose en el costo acumulado del camino desde el inicio, asegurando que se exploren primero los caminos de menor costo. Aunque es completo y √≥ptimo, puede ser ineficiente al explorar en todas direcciones sin informaci√≥n del objetivo.

üß† Pregunta 4
¬øQu√© define una heur√≠stica admisible en el contexto del algoritmo de b√∫squeda A*?

A. Una heur√≠stica que siempre sobreestima el costo real para llegar al objetivo.
B. Una heur√≠stica que nunca sobreestima el costo real para llegar al objetivo.
C. Una heur√≠stica que es f√°cil de calcular pero no necesariamente precisa.
D. Una heur√≠stica que siempre devuelve un valor positivo.

‚úÖ Correcta: B
üßæ Explicaci√≥n: Una heur√≠stica admisible es aquella cuyo valor estimado (h(n)) para llegar al objetivo desde un nodo n nunca es mayor que el costo real del camino √≥ptimo (h 
‚àó
 (n)). Esta propiedad es crucial para que A* garantice encontrar la soluci√≥n √≥ptima.

üß† Pregunta 5
¬øCu√°l es la funci√≥n de evaluaci√≥n f(n) utilizada en el algoritmo de b√∫squeda A*?

A. f(n)=h(n), donde h(n) es la estimaci√≥n heur√≠stica del costo al objetivo.
B. f(n)=g(n), donde g(n) es el costo del camino recorrido hasta el nodo n.
C. f(n)=g(n)+h(n), donde g(n) es el costo del camino hasta n y h(n) es la estimaci√≥n heur√≠stica desde n al objetivo.
D. f(n)=g(n)‚àíh(n), combinando el costo del camino con la estimaci√≥n heur√≠stica.

‚úÖ Correcta: C
üßæ Explicaci√≥n: La funci√≥n de evaluaci√≥n f(n) en A* combina el costo real del camino recorrido hasta el nodo n (g(n)) con la estimaci√≥n heur√≠stica del costo restante hasta el objetivo (h(n)), proporcionando una estimaci√≥n del costo total de la soluci√≥n que pasa por n.

üß† Pregunta 6
¬øEn qu√© se diferencia principalmente el algoritmo de b√∫squeda voraz "primero el mejor" (Greedy Best-First Search) del algoritmo A*?

A. El algoritmo voraz considera tanto el costo del camino recorrido como la estimaci√≥n heur√≠stica.
B. El algoritmo A* solo utiliza la funci√≥n heur√≠stica para guiar la b√∫squeda.
C. El algoritmo voraz expande los nodos bas√°ndose √∫nicamente en la funci√≥n heur√≠stica, sin considerar el costo del camino.
D. El algoritmo A* no garantiza encontrar la soluci√≥n √≥ptima, mientras que el voraz s√≠ lo hace.

‚úÖ Correcta: C
üßæ Explicaci√≥n: El algoritmo voraz "primero el mejor" toma decisiones de expansi√≥n bas√°ndose exclusivamente en la funci√≥n heur√≠stica, intentando moverse hacia el estado que parece m√°s cercano al objetivo en cada paso, sin tener en cuenta el costo del camino ya recorrido. En contraste, A* considera ambas el costo del camino y la heur√≠stica.

üß† Pregunta 7
¬øCu√°l de las siguientes afirmaciones describe mejor el objetivo de la b√∫squeda informada?

A. Explorar todos los posibles estados del problema de manera sistem√°tica.
B. Utilizar conocimiento espec√≠fico del problema para guiar la b√∫squeda de manera m√°s eficiente hacia el objetivo.
C. Encontrar cualquier soluci√≥n al problema, sin importar su costo.
D. Minimizar la cantidad de memoria utilizada durante el proceso de b√∫squeda.

‚úÖ Correcta: B
üßæ Explicaci√≥n: La b√∫squeda informada se centra en aplicar el conocimiento disponible sobre el problema para priorizar la exploraci√≥n de los estados que tienen m√°s probabilidades de conducir a una soluci√≥n, mejorando as√≠ la eficiencia en comparaci√≥n con la b√∫squeda ciega.

üß† Pregunta 8
En el contexto de la b√∫squeda heur√≠stica, ¬øqu√© significa que una heur√≠stica sea "consistente" (o "mon√≥tona")?

A. Que la heur√≠stica siempre devuelve el mismo valor para el mismo estado.
B. Que la heur√≠stica nunca sobreestima el costo real al objetivo.
C. Que para cualquier nodo n y cualquier sucesor n 
‚Ä≤
  generado por una acci√≥n con costo c(n,n 
‚Ä≤
 ), se cumple que h(n)‚â§c(n,n 
‚Ä≤
 )+h(n 
‚Ä≤
 ).
D. Que la heur√≠stica siempre subestima el costo real al objetivo.

‚úÖ Correcta: C
üßæ Explicaci√≥n: La consistencia (o monoton√≠a) es una propiedad m√°s estricta que la admisibilidad. Asegura que la estimaci√≥n heur√≠stica no "disminuya demasiado" al moverse a un nodo sucesor, lo cual es importante para la optimalidad de A* en grafos.

üß† Pregunta 9
¬øCu√°l de los siguientes algoritmos de b√∫squeda garantiza encontrar la soluci√≥n √≥ptima si la funci√≥n heur√≠stica utilizada es admisible?

A. B√∫squeda en Profundidad (DFS)
B. B√∫squeda en Anchura (BFS)
C. B√∫squeda Voraz Primero el Mejor (Greedy Best-First Search)
D. B√∫squeda A*

‚úÖ Correcta: D
üßæ Explicaci√≥n: El algoritmo A* garantiza encontrar la soluci√≥n √≥ptima si la heur√≠stica utilizada es admisible (nunca sobreestima el costo real al objetivo).

üß† Pregunta 10
¬øQu√© implicaci√≥n tiene una funci√≥n heur√≠stica h(n)=0 para todos los nodos n en el algoritmo A*?

A. El algoritmo se comporta como una b√∫squeda voraz.
B. El algoritmo se comporta como una b√∫squeda en profundidad.
C. El algoritmo se comporta como una b√∫squeda de costo uniforme (UCS).
D. El algoritmo no encontrar√° ninguna soluci√≥n.

‚úÖ Correcta: C
üßæ Explicaci√≥n: Si la heur√≠stica es siempre cero, la funci√≥n de evaluaci√≥n f(n)=g(n)+h(n) se reduce a f(n)=g(n), que es la funci√≥n de evaluaci√≥n utilizada por la b√∫squeda de costo uniforme.

üß† Pregunta 11
¬øCu√°l es la principal desventaja en t√©rminos de complejidad espacial del algoritmo A* en el peor de los casos?

A. Es lineal con respecto a la profundidad del √°rbol de b√∫squeda.
B. Es logar√≠tmica con respecto al n√∫mero de nodos expandidos.
C. Puede ser exponencial con respecto a la profundidad del √°rbol de b√∫squeda, ya que debe mantener todos los nodos en memoria.
D. Es constante, independientemente del tama√±o del espacio de estados.

‚úÖ Correcta: C
üßæ Explicaci√≥n: En el peor de los casos, A* puede tener que explorar una gran parte del espacio de estados, almacenando todos los nodos generados en la cola de ABIERTOS, lo que resulta en una complejidad espacial exponencial.

üß† Pregunta 12
¬øQu√© estrategia sigue el algoritmo de b√∫squeda voraz "primero el mejor" al decidir qu√© nodo expandir a continuaci√≥n?

A. Expande el nodo con el menor costo de camino desde el inicio.
B. Expande el nodo que se estima que est√° m√°s cerca del objetivo seg√∫n la funci√≥n heur√≠stica.
C. Expande los nodos en el orden en que fueron generados.
D. Expande los nodos m√°s profundos en el √°rbol de b√∫squeda.

‚úÖ Correcta: B
üßæ Explicaci√≥n: El algoritmo voraz se gu√≠a por la funci√≥n heur√≠stica, siempre eligiendo expandir el nodo que parece m√°s prometedor en t√©rminos de su proximidad estimada al estado objetivo.

üß† Pregunta 13
¬øPor qu√© el algoritmo de b√∫squeda voraz "primero el mejor" no garantiza encontrar la soluci√≥n √≥ptima?

A. Porque no explora todos los posibles caminos hacia el objetivo.
B. Porque la funci√≥n heur√≠stica utilizada siempre sobreestima el costo real.
C. Porque puede quedar atrapado en caminos sub√≥ptimos que parecen prometedores inicialmente.
D. Porque requiere una gran cantidad de memoria para almacenar los nodos visitados.

‚úÖ Correcta: C
üßæ Explicaci√≥n: Al tomar decisiones basadas √∫nicamente en la informaci√≥n heur√≠stica local, el algoritmo voraz puede seguir caminos que inicialmente parecen buenos pero que, a largo plazo, conducen a soluciones sub√≥ptimas.

üß† Pregunta 14
Considera el problema del 8-puzzle. ¬øCu√°l de las siguientes heur√≠sticas es admisible para este problema?

A. El n√∫mero total de movimientos realizados hasta el momento.
B. El n√∫mero de piezas que no est√°n en su posici√≥n final.
C. El n√∫mero de movimientos necesarios para colocar la pieza '1' en su posici√≥n final.
D. El n√∫mero de piezas que est√°n en su posici√≥n final.

‚úÖ Correcta: B
üßæ Explicaci√≥n: El n√∫mero de piezas fuera de lugar es una heur√≠stica admisible porque cada pieza fuera de lugar requerir√° al menos un movimiento para llegar a su posici√≥n correcta en el estado final.

üß† Pregunta 15
En el contexto del problema del 8-puzzle, ¬øqu√© representa la distancia Manhattan como funci√≥n heur√≠stica?

A. El n√∫mero de movimientos en diagonal necesarios para llevar cada pieza a su posici√≥n final.
B. La suma de las distancias horizontales y verticales que cada pieza debe recorrer para alcanzar su posici√≥n final.
C. La distancia euclidiana directa entre la posici√≥n actual de cada pieza y su posici√≥n final.
D. El n√∫mero de piezas adyacentes al espacio vac√≠o.

‚úÖ Correcta: B
üßæ Explicaci√≥n: La distancia Manhattan para una pieza es la suma de la diferencia absoluta de sus coordenadas filas y la diferencia absoluta de sus coordenadas columnas con respecto a su posici√≥n objetivo. La suma de estas distancias para todas las piezas es una heur√≠stica admisible para el 8-puzzle.

üß† Pregunta 16
¬øQu√© se entiende por "costo de camino" en un problema de b√∫squeda con costos asociados a los operadores?

A. El n√∫mero de operadores aplicados para llegar al estado actual desde el estado inicial.
B. La suma de los costos de cada operador aplicado en la secuencia de acciones que lleva al estado actual desde el estado inicial.
C. El costo del √∫ltimo operador aplicado para llegar al estado actual.
D. Una estimaci√≥n del costo restante para alcanzar el estado objetivo desde el estado actual.

‚úÖ Correcta: B
üßæ Explicaci√≥n: El costo de camino es la acumulaci√≥n de los costos incurridos al aplicar la secuencia de operadores que han llevado desde el estado inicial hasta el estado actual.

üß† Pregunta 17
¬øCu√°l de los siguientes algoritmos utiliza una funci√≥n de evaluaci√≥n que considera tanto el costo del camino recorrido como una estimaci√≥n del costo restante hasta el objetivo?

A. B√∫squeda en Anchura (BFS)
B. B√∫squeda en Profundidad (DFS)
C. B√∫squeda Voraz Primero el Mejor (Greedy Best-First Search)
D. B√∫squeda A*

‚úÖ Correcta: D
üßæ Explicaci√≥n: El algoritmo A* utiliza la funci√≥n de evaluaci√≥n f(n)=g(n)+h(n), donde g(n) es el costo del camino recorrido y h(n) es la estimaci√≥n heur√≠stica del costo restante.

üß† Pregunta 18
¬øQu√© condici√≥n debe cumplir una heur√≠stica para garantizar que el algoritmo A* encuentre la soluci√≥n √≥ptima en un grafo?

A. Debe ser consistente (mon√≥tona).
B. Debe ser computable en tiempo constante.
C. Debe ser siempre mayor que cero.
D. Debe sobreestimar el costo real al objetivo.

‚úÖ Correcta: A
üßæ Explicaci√≥n: En grafos, para garantizar la optimalidad de A*, la heur√≠stica debe ser consistente (o mon√≥tona), adem√°s de ser admisible.

üß† Pregunta 19
¬øCu√°l es la principal ventaja de utilizar una funci√≥n heur√≠stica informativa en un algoritmo de b√∫squeda?

A. Siempre encuentra la soluci√≥n m√°s r√°pida posible.
B. Reduce el n√∫mero de nodos expandidos y, por lo tanto, mejora la eficiencia de la b√∫squeda.
C. Garantiza que la soluci√≥n encontrada sea la primera soluci√≥n generada.
D. Simplifica la implementaci√≥n del algoritmo de b√∫squeda.

‚úÖ Correcta: B
üßæ Explicaci√≥n: Una buena heur√≠stica gu√≠a la b√∫squeda hacia las √°reas m√°s prometedoras del espacio de estados, evitando la exploraci√≥n innecesaria de caminos menos probables y reduciendo as√≠ el tama√±o del √°rbol de b√∫squeda y el tiempo de ejecuci√≥n.

üß† Pregunta 20
¬øEn qu√© situaciones podr√≠a ser preferible utilizar un algoritmo de b√∫squeda ciega en lugar de uno informado?

A. Cuando se dispone de una heur√≠stica muy precisa y eficiente.
B. Cuando el espacio de estados es muy grande y la heur√≠stica es poco informativa o costosa de calcular.
C. Cuando se garantiza que el objetivo se encuentra a una profundidad peque√±a.
D. Cuando se necesita encontrar la soluci√≥n √≥ptima y la heur√≠stica no es admisible.

‚úÖ Correcta: B
üßæ Explicaci√≥n: Si la heur√≠stica disponible es de baja calidad o su c√°lculo es muy costoso, la sobrecarga de utilizarla podr√≠a superar los beneficios en la reducci√≥n del espacio de b√∫squeda, haciendo que un algoritmo de b√∫squeda ciega simple como BFS podr√≠a ser m√°s pr√°ctico en ciertos casos.

üß† Pregunta 21
¬øQu√© significa que un algoritmo de b√∫squeda sea "completo"?

A. Que siempre encuentra una soluci√≥n si existe.
B. Que siempre encuentra la soluci√≥n √≥ptima.
C. Que explora todos los nodos del espacio de estados.
D. Que termina en un tiempo finito.

‚úÖ Correcta: A
üßæ Explicaci√≥n: La completitud de un algoritmo de b√∫squeda significa que si existe al menos una soluci√≥n para el problema, el algoritmo est√° garantizado para encontrarla en un tiempo finito.

üß† Pregunta 22
¬øCu√°l es la principal limitaci√≥n de los algoritmos voraces en general?

A. Su alta complejidad computacional en la mayor√≠a de los problemas.
B. La necesidad de una funci√≥n heur√≠stica muy precisa para funcionar correctamente.
C. Que no siempre encuentran la soluci√≥n √≥ptima al problema.
D. Su incapacidad para manejar problemas con costos de camino negativos.

‚úÖ Correcta: C
üßæ Explicaci√≥n: Los algoritmos voraces toman decisiones localmente √≥ptimas en cada paso con la esperanza de encontrar una soluci√≥n globalmente √≥ptima, pero esta estrategia no siempre garantiza el mejor resultado final.

üß† Pregunta 23
Considerando la funci√≥n de evaluaci√≥n f(n)=g(n)+h(n) en A*, ¬øqu√© representa g(n)?

A. Una estimaci√≥n del costo para llegar desde el nodo n al estado objetivo.
B. El costo real del camino recorrido desde el estado inicial hasta el nodo n.
C. Una combinaci√≥n del costo del camino y la estimaci√≥n heur√≠stica.
D. El n√∫mero de pasos realizados para alcanzar el nodo n.

‚úÖ Correcta: B
üßæ Explicaci√≥n: g(n) representa el costo acumulado de los operadores aplicados a lo largo del camino que se ha seguido para llegar desde el estado inicial hasta el nodo n.

üß† Pregunta 24
¬øQu√© tipo de estructura de datos se utiliza com√∫nmente para implementar la cola de "ABIERTOS" en algoritmos de b√∫squeda informada como A* y Greedy Best-First Search?

A. Una pila (stack).
B. Una cola FIFO (first-in, first-out).
C. Una cola de prioridad (priority queue).
D. Un √°rbol binario de b√∫squeda balanceado.

‚úÖ Correcta: C
üßæ Explicaci√≥n: Tanto A* como Greedy Best-First Search utilizan una cola de prioridad para almacenar los nodos a explorar, prioriz√°ndolos seg√∫n su valor de evaluaci√≥n (f(n) en A* y h(n) en Greedy Best-First).

üß† Pregunta 25
¬øC√≥mo afecta la calidad de la funci√≥n heur√≠stica al rendimiento del algoritmo A*?

A. Una heur√≠stica m√°s precisa generalmente conduce a una exploraci√≥n m√°s eficiente del espacio de estados.
B. Una heur√≠stica menos precisa siempre resulta en una soluci√≥n sub√≥ptima.
C. La calidad de la heur√≠stica no tiene ning√∫n impacto en la eficiencia de A*.
D. Una heur√≠stica sobreestimada siempre garantiza la optimalidad.

‚úÖ Correcta: A
üßæ Explicaci√≥n: Una heur√≠stica que proporciona estimaciones m√°s cercanas al costo real para llegar al objetivo permite a A* priorizar la exploraci√≥n de los caminos m√°s prometedores, reduciendo la cantidad de nodos expandidos y mejorando la eficiencia.

üß† Pregunta 26
¬øCu√°l de las siguientes afirmaciones es verdadera con respecto a la relaci√≥n entre admisibilidad y consistencia de una heur√≠stica?

A. Una heur√≠stica consistente siempre es admisible.
B. Una heur√≠stica admisible siempre es consistente.
C. Admisibilidad y consistencia son propiedades independientes.
D. Una heur√≠stica consistente nunca es admisible.

‚úÖ Correcta: A
üßæ Explicaci√≥n: Si una heur√≠stica es consistente, entonces tambi√©n es admisible. La consistencia implica la admisibilidad, pero lo contrario no siempre es cierto.

üß† Pregunta 27
¬øQu√© implicaci√≥n tiene un factor de ramificaci√≥n alto en la complejidad de los algoritmos de b√∫squeda?

A. Reduce la cantidad de memoria necesaria.
B. Disminuye el tiempo necesario para encontrar una soluci√≥n.
C. Aumenta exponencialmente el n√∫mero de nodos a explorar.
D. No tiene un impacto significativo en la complejidad.

‚úÖ Correcta: C
üßæ Explicaci√≥n: Un factor de ramificaci√≥n alto significa que cada estado puede tener muchos sucesores, lo que lleva a un crecimiento exponencial del n√∫mero de nodos en el √°rbol de b√∫squeda a medida que aumenta la profundidad.

üß† Pregunta 28
¬øEn qu√© se diferencia la b√∫squeda de costo uniforme (UCS) de la b√∫squeda en anchura (BFS)?

A. UCS utiliza una funci√≥n heur√≠stica, mientras que BFS no.
B. UCS expande nodos bas√°ndose en el costo del camino, mientras que BFS lo hace por profundidad.
C. BFS garantiza la optimalidad en problemas con costos de paso variables, mientras que UCS no.
D. No hay diferencia entre UCS y BFS.

‚úÖ Correcta: B
üßæ Explicaci√≥n: BFS explora el espacio de estados por niveles de profundidad, mientras que UCS expande los nodos en orden del costo del camino desde el inicio, lo que lo hace √≥ptimo para problemas con costos de paso variables (no uniformes). Si todos los costos de paso son iguales, UCS se comporta como BFS.

üß† Pregunta 29
¬øCu√°l es el principal objetivo de la poda en los algoritmos de b√∫squeda?

A. Encontrar la soluci√≥n m√°s r√°pida posible.
B. Reducir la cantidad de memoria utilizada.
C. Evitar la exploraci√≥n de caminos que no conducir√°n a una soluci√≥n √≥ptima o ya han sido explorados de manera m√°s eficiente.
D. Simplificar la implementaci√≥n del algoritmo.

‚úÖ Correcta: C
üßæ Explicaci√≥n: La poda es una t√©cnica para eliminar ramas del √°rbol de b√∫squeda que se consideran innecesarias o menos prometedoras, con el fin de mejorar la eficiencia del algoritmo al evitar la exploraci√≥n de estados redundantes o sub√≥ptimos.

üß† Pregunta 30
¬øC√≥mo se define un "estado" en el contexto de un problema de b√∫squeda en Inteligencia Artificial?

A. La secuencia de acciones necesarias para resolver el problema.
B. Una configuraci√≥n particular del mundo o del problema en un momento dado.
C. El objetivo final que se desea alcanzar.
D. El costo asociado a la realizaci√≥n de una acci√≥n.

‚úÖ Correcta: B
üßæ Explicaci√≥n: Un estado representa una situaci√≥n espec√≠fica o una configuraci√≥n del problema en un punto particular del proceso de b√∫squeda. El algoritmo de b√∫squeda navega a trav√©s de diferentes estados aplicando operadores para alcanzar el estado objetivo.

üß† Pregunta 31
¬øQu√© papel juegan los "operadores" en un problema de b√∫squeda en IA?

A. Definen el estado inicial del problema.
B. Representan las acciones que se pueden realizar para pasar de un estado a otro.
C. Indican si se ha alcanzado el estado objetivo.
D. Asignan un valor num√©rico a cada estado del problema.

‚úÖ Correcta: B
üßæ Explicaci√≥n: Los operadores son las acciones o movimientos v√°lidos que transforman un estado del problema en otro, permitiendo la exploraci√≥n del espacio de estados en busca de una soluci√≥n.

üß† Pregunta 32
¬øCu√°l es la diferencia fundamental entre un algoritmo de b√∫squeda "online" y uno "offline"?

A. Los algoritmos online planifican la soluci√≥n completa antes de comenzar a ejecutarla, mientras que los offline toman decisiones en tiempo real.
B. Los algoritmos offline conocen el espacio de estados completo de antemano, mientras que los online aprenden sobre √©l a medida que act√∫an.
C. Los algoritmos online siempre encuentran la soluci√≥n √≥ptima, mientras que los offline no.
D. Los algoritmos offline requieren menos memoria que los online.

‚úÖ Correcta: B
üßæ Explicaci√≥n: Los algoritmos offline (como A* o BFS) planifican una soluci√≥n completa antes de la ejecuci√≥n, bas√°ndose en un conocimiento previo del entorno. Los algoritmos online (como el aprendizaje por refuerzo) act√∫an y aprenden sobre el entorno simult√°neamente.

üß† Pregunta 33
En el contexto de la b√∫squeda, ¬øqu√© se entiende por "factor de ramificaci√≥n"?

A. La profundidad m√°xima del √°rbol de b√∫squeda.
B. El n√∫mero de acciones posibles desde el estado inicial.
C. El n√∫mero promedio de sucesores que tiene cada estado en el espacio de estados.
D. El costo promedio de aplicar un operador.

‚úÖ Correcta: C
üßæ Explicaci√≥n: El factor de ramificaci√≥n es una medida del n√∫mero promedio de estados sucesores que se pueden generar a partir de un estado dado. Un factor de ramificaci√≥n alto puede llevar a un crecimiento exponencial del √°rbol de b√∫squeda.

üß† Pregunta 34
¬øCu√°l de los siguientes algoritmos de b√∫squeda es un ejemplo de b√∫squeda no informada (o ciega)?

A. B√∫squeda A*
B. B√∫squeda Voraz Primero el Mejor
C. B√∫squeda en Profundidad (DFS)
D. B√∫squeda con Profundidad Iterativa (IDS) utilizando una heur√≠stica.

‚úÖ Correcta: C
üßæ Explicaci√≥n: La B√∫squeda en Profundidad (DFS) explora el espacio de estados avanzando por una rama hasta la profundidad l√≠mite antes de retroceder y explorar otra rama, sin utilizar ninguna informaci√≥n heur√≠stica sobre la distancia al objetivo.

üß† Pregunta 35
¬øQu√© ventaja ofrece la B√∫squeda con Profundidad Iterativa (IDS) sobre la B√∫squeda en Profundidad (DFS)?

A. IDS utiliza una funci√≥n heur√≠stica para guiar la b√∫squeda.
B. IDS garantiza encontrar la soluci√≥n √≥ptima en grafos con costos de arista variables.
C. IDS es completa y encuentra la soluci√≥n con la menor profundidad (como BFS) mientras usa menos memoria que BFS.
D. IDS explora el espacio de estados m√°s r√°pidamente que DFS.

‚úÖ Correcta: C
üßæ Explicaci√≥n: IDS combina los beneficios de DFS (menor requerimiento de memoria) con la completitud de BFS y la garant√≠a de encontrar la soluci√≥n con la menor profundidad al explorar el espacio de estados en profundidades crecientes.

üß† Pregunta 36
¬øCu√°l es la principal diferencia entre un problema de b√∫squeda de "un solo agente" y un problema de b√∫squeda de "m√∫ltiples agentes"?

A. Los problemas de m√∫ltiples agentes siempre tienen un costo de soluci√≥n mayor.
B. En los problemas de m√∫ltiples agentes, las acciones de un agente pueden afectar el entorno y las decisiones de otros agentes.
C. Los problemas de un solo agente son inherentemente m√°s complejos de resolver.
D. Los problemas de m√∫ltiples agentes no pueden ser resueltos utilizando algoritmos de b√∫squeda heur√≠stica.

‚úÖ Correcta: B
üßæ Explicaci√≥n: En los problemas de m√∫ltiples agentes, es necesario considerar las interacciones y la posible cooperaci√≥n o competencia entre los diferentes agentes, lo que a√±ade complejidad al proceso de b√∫squeda de una soluci√≥n.

üß† Pregunta 37
¬øQu√© significa que un algoritmo de b√∫squeda sea "√≥ptimo"?

A. Que encuentra una soluci√≥n en el menor tiempo posible.
B. Que utiliza la menor cantidad de memoria posible.
C. Que siempre encuentra la soluci√≥n con el menor costo de camino.
D. Que explora el menor n√∫mero de nodos posible.

‚úÖ Correcta: C
üßæ Explicaci√≥n: Un algoritmo de b√∫squeda √≥ptimo garantiza que la soluci√≥n que encuentra es la que tiene el menor costo total en t√©rminos de la secuencia de acciones necesarias para alcanzar el estado objetivo desde el estado inicial.

üß† Pregunta 38
En el contexto de la b√∫squeda local, ¬øcu√°l es el objetivo principal?

A. Encontrar una secuencia de acciones desde el estado inicial hasta el estado objetivo.
B. Encontrar el camino de menor costo desde el estado inicial hasta el estado objetivo.
C. Encontrar un buen estado objetivo (o una soluci√≥n aceptable) dentro de un espacio de estados grande, posiblemente sin recordar el camino recorrido.
D. Explorar sistem√°ticamente todo el espacio de estados para garantizar la optimalidad.

‚úÖ Correcta: C
üßæ Explicaci√≥n: Los algoritmos de b√∫squeda local se centran en mejorar un estado actual iterativamente, movi√©ndose a estados vecinos, con el objetivo de encontrar un estado que satisfaga un criterio de calidad (como un estado objetivo o un estado con un valor de funci√≥n objetivo alto).

üß† Pregunta 39
¬øCu√°l de los siguientes es un ejemplo de algoritmo de b√∫squeda local?

A. B√∫squeda en Anchura (BFS)
B. B√∫squeda A*
C. Algoritmo de Ascenso de Colinas (Hill Climbing)
D. B√∫squeda con Profundidad Limitada (DLS)

‚úÖ Correcta: C
üßæ Explicaci√≥n: El algoritmo de Ascenso de Colinas es un algoritmo de b√∫squeda local que intenta encontrar un estado mejor movi√©ndose iterativamente al estado vecino con el valor heur√≠stico m√°s alto.

üß† Pregunta 40
¬øCu√°l es una limitaci√≥n com√∫n del algoritmo de Ascenso de Colinas?

A. Requiere una gran cantidad de memoria para almacenar el espacio de estados.
B. Puede quedar atrapado en m√°ximos locales, que no son la soluci√≥n global √≥ptima.
C. No puede ser aplicado a problemas con espacios de estados continuos.
D. Siempre encuentra la soluci√≥n √≥ptima si existe.

‚úÖ Correcta: B
üßæ Explicaci√≥n: El Ascenso de Colinas es susceptible a quedarse atascado en "picos" locales en el espacio de b√∫squeda, donde ning√∫n vecino tiene un valor mejor, aunque exista una soluci√≥n globalmente mejor en otra parte del espacio.

üß† Pregunta 41
¬øQu√© estrategia utiliza el algoritmo de "primero el mejor" con b√∫squeda voraz?

A. Expandir el nodo con el menor costo de camino hasta el momento.
B. Expandir el nodo que se estima m√°s cercano al objetivo seg√∫n la heur√≠stica.
C. Expandir todos los nodos a una profundidad dada antes de pasar al siguiente nivel.
D. Expandir el nodo que ha sido visitado menos recientemente.

‚úÖ Correcta: B
üßæ Explicaci√≥n: La b√∫squeda voraz "primero el mejor" prioriza la expansi√≥n de los nodos que tienen la heur√≠stica m√°s prometedora, es decir, aquellos que se estiman m√°s cercanos al estado objetivo.

üß† Pregunta 42
¬øCu√°l es la funci√≥n principal de la lista de "CERRADOS" en algoritmos de b√∫squeda como A*?

A. Almacenar los nodos que a√∫n no han sido explorados.
B. Almacenar los nodos que ya han sido expandidos para evitar ciclos y redundancia en la b√∫squeda.
C. Mantener los nodos ordenados por su valor heur√≠stico.
D. Registrar el camino seguido desde el estado inicial hasta el estado objetivo.

‚úÖ Correcta: B
üßæ Explicaci√≥n: La lista de "CERRADOS" se utiliza para llevar un registro de los nodos que ya han sido visitados y expandidos. Esto evita la repetici√≥n de la exploraci√≥n de los mismos estados y ayuda a prevenir bucles infinitos en grafos con ciclos.

üß† Pregunta 43
¬øQu√© se entiende por "admisibilidad" de una heur√≠stica en el contexto de algoritmos de b√∫squeda?

A. Que la heur√≠stica siempre devuelve un valor positivo.
B. Que la heur√≠stica es f√°cil de calcular eficientemente.
C. Que la heur√≠stica nunca sobreestima el costo real para alcanzar el estado objetivo.
D. Que la heur√≠stica proporciona una estimaci√≥n exacta del costo restante.

‚úÖ Correcta: C
üßæ Explicaci√≥n: Una heur√≠stica admisible es aquella que proporciona una estimaci√≥n del costo restante para llegar al objetivo que nunca es mayor que el costo real. Esta propiedad es crucial para garantizar la optimalidad de A*.

üß† Pregunta 44
¬øC√≥mo afecta un costo de paso no uniforme a la b√∫squeda de la soluci√≥n √≥ptima?

A. Simplifica la b√∫squeda, ya que todos los caminos tienen el mismo costo.
B. Requiere algoritmos que consideren el costo acumulado del camino, como la B√∫squeda de Costo Uniforme o A*.
C. Hace que la B√∫squeda en Anchura (BFS) sea siempre la estrategia √≥ptima.
D. Impide el uso de funciones heur√≠sticas.

‚úÖ Correcta: B
üßæ Explicaci√≥n: Cuando los costos de las acciones var√≠an, es importante utilizar algoritmos que acumulen estos costos a lo largo del camino para poder comparar diferentes soluciones en t√©rminos de su costo total y encontrar la √≥ptima.

üß† Pregunta 45
¬øCu√°l es una posible desventaja de utilizar una heur√≠stica muy compleja en un algoritmo de b√∫squeda?

A. Puede llevar a explorar un mayor n√∫mero de nodos.
B. Puede aumentar significativamente el tiempo de c√°lculo de la heur√≠stica por cada nodo.
C. Puede hacer que el algoritmo encuentre una soluci√≥n sub√≥ptima.
D. Puede reducir la precisi√≥n de la estimaci√≥n del costo al objetivo.

‚úÖ Correcta: B
üßæ Explicaci√≥n: Si el c√°lculo de la funci√≥n heur√≠stica es muy costoso en t√©rminos de tiempo computacional, el beneficio de explorar menos nodos podr√≠a verse anulado por el tiempo adicional dedicado a calcular la heur√≠stica para cada nodo.

üß† Pregunta 46
¬øQu√© tipo de problemas son m√°s adecuados para ser resueltos con algoritmos de b√∫squeda local?

A. Problemas donde se necesita encontrar el camino √≥ptimo desde un inicio hasta un fin bien definido.
B. Problemas con un espacio de estados peque√±o y bien comprendido.
C. Problemas donde el objetivo es encontrar un estado que cumpla ciertos criterios, y la ruta para llegar a √©l es menos importante o el espacio de estados es demasiado grande para una b√∫squeda sistem√°tica.
D. Problemas que requieren una exploraci√≥n exhaustiva de todas las posibles soluciones.

‚úÖ Correcta: C
üßæ Explicaci√≥n: La b√∫squeda local es efectiva en problemas donde el objetivo es encontrar un "buen" estado, como en problemas de optimizaci√≥n o en espacios de estados vastos donde una b√∫squeda sistem√°tica ser√≠a inviable.

üß† Pregunta 47
¬øC√≥mo se relaciona el concepto de "√≥ptimamente eficiente" con el algoritmo A*?

A. Significa que A* siempre encuentra la soluci√≥n en el menor tiempo posible.
B. Significa que A* utiliza la menor cantidad de memoria posible para encontrar la soluci√≥n.
C. Significa que ning√∫n otro algoritmo que utilice la misma heur√≠stica admisible expandir√° menos nodos que A*.
D. Significa que A* es el algoritmo m√°s f√°cil de implementar para problemas de b√∫squeda heur√≠stica.

‚úÖ Correcta: C
üßæ Explicaci√≥n: La optimal eficiencia de A* se refiere a su propiedad de expandir el m√≠nimo n√∫mero de nodos necesario para garantizar la optimalidad de la soluci√≥n, dada una heur√≠stica admisible.

üß† Pregunta 48
¬øQu√© diferencia a la B√∫squeda en Anchura (BFS) de la B√∫squeda en Profundidad (DFS)?

A. BFS utiliza una funci√≥n heur√≠stica, mientras que DFS no.
B. BFS explora el espacio de estados nivel por nivel, mientras que DFS explora una rama hasta su profundidad l√≠mite.
C. BFS es m√°s eficiente en t√©rminos de memoria que DFS.
D. DFS garantiza encontrar la soluci√≥n √≥ptima, mientras que BFS no.

‚úÖ Correcta: B
üßæ Explicaci√≥n: BFS explora todos los nodos a una profundidad dada antes de pasar al siguiente nivel, asegurando que se encuentre la soluci√≥n con la menor profundidad. DFS explora una rama del √°rbol hasta una profundidad l√≠mite antes de retroceder.

üß† Pregunta 49
¬øEn qu√© situaciones podr√≠a ser √∫til la B√∫squeda con Profundidad Limitada (DLS)?

A. Cuando se conoce una cota superior para la profundidad de la soluci√≥n.
B. Cuando se necesita explorar todo el espacio de estados.
C. Cuando se busca la soluci√≥n √≥ptima en problemas con costos de paso variables.
D. Cuando la funci√≥n heur√≠stica es muy precisa.

‚úÖ Correcta: A
üßæ Explicaci√≥n: DLS es √∫til cuando se tiene alguna idea de la profundidad m√°xima a la que se puede encontrar la soluci√≥n, lo que permite evitar la exploraci√≥n de ramas innecesariamente largas.

üß† Pregunta 50
¬øCu√°l es el objetivo principal de una funci√≥n de evaluaci√≥n en un algoritmo de b√∫squeda heur√≠stica?

A. Determinar si un estado es el estado objetivo.
B. Estimar la "deseabilidad" de un estado para guiar el proceso de b√∫squeda.
C. Definir los operadores v√°lidos para cada estado.
D. Calcular el costo real del camino recorrido hasta un estado.

‚úÖ Correcta: B
üßæ Explicaci√≥n: La funci√≥n de evaluaci√≥n (como f(n) en A* o h(n) en Greedy Best-First) proporciona una medida de qu√© tan prometedor es un estado para alcanzar el objetivo, permitiendo al algoritmo priorizar la exploraci√≥n de los estados m√°s relevantes.