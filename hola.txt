üß† Pregunta 96 (2 puntos)

Rebase interactivo y eficiencia del historial

Un equipo de desarrollo ha estado trabajando en una rama de caracter√≠stica durante varias semanas, generando numerosos commits que documentan los pasos incrementales de su trabajo. Antes de fusionar esta rama a la principal, consideran utilizar el rebase interactivo.

A. Describe dos comandos espec√≠ficos de git rebase -i que podr√≠an utilizar para simplificar y aclarar el historial de su rama de caracter√≠stica antes de la fusi√≥n. Explica el prop√≥sito de cada comando. (1 punto)
B. Discute una ventaja y una posible desventaja de aplicar extensivamente el rebase interactivo en ramas de caracter√≠sticas de larga duraci√≥n en un entorno colaborativo. (1 punto)

‚úÖ Correcta: (La respuesta debe mencionar squash o fixup para combinar commits y reword para modificar mensajes, y discutir la ventaja de un historial limpio frente al riesgo de reescritura de historia compartida).

üßæ Explicaci√≥n: squash/fixup reducen el n√∫mero de commits, reword mejora los mensajes. Un historial limpio facilita la comprensi√≥n, pero rebasar ramas compartidas puede causar problemas.